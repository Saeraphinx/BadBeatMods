{
  "openapi": "3.0.0",
  "info": {
    "title": "BadBeatMods API",
    "description": "This isn't really fully complete, but its better than absolutely nothing.\n\nThis API documentation is automatically generated and therefor may not be 100% accurate and may be missing a few fields.",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "https://bbm.saera.gay/"
    },
    {
      "url": "http://bbm.saera.gay/"
    }
  ],
  "tags": [
    {
      "name": "Status",
      "description": "Status related endpoints"
    },
    {
      "name": "Mods",
      "description": "Mod related endpoints"
    },
    {
      "name": "Versions",
      "description": "Version Management"
    },
    {
      "name": "MOTD",
      "description": "Message of the Day related endpoints"
    },
    {
      "name": "Approval",
      "description": "Approval related endpoints"
    },
    {
      "name": "Users",
      "description": "User related endpoints"
    },
    {
      "name": "Admin",
      "description": "Admin related endpoints"
    },
    {
      "name": "Bulk Actions",
      "description": "Actions that allow you to skip calling the same endpoint over and over again"
    },
    {
      "name": "Auth",
      "description": "Authentication related endpoints"
    },
    {
      "name": "BeatMods",
      "description": "Legacy BeatMods API endpoints"
    }
  ],
  "paths": {
    "/beatmods/mod": {
      "get": {
        "tags": [
          "BeatMods"
        ],
        "summary": "Legacy BeatMods API endpoint.",
        "description": "Legacy BeatMods API endpoint. This is available for mod downloaders that have not been updated to use the new API.<br><br>This endpoint does not work the same way as the old BeatMods API, but it should be close enough to work with most mod downloaders.",
        "parameters": [
          {
            "name": "gameVersion",
            "description": "The game version as a string (ex. '1.29.1', '1.40.0').",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The statuses to return. Available statuses are: 'approved' & 'all'",
            "format": "string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all mods."
          },
          "400": {
            "description": "Missing Game Version."
          }
        },
        "deprecated": true
      }
    },
    "/api/v1/mod": {
      "get": {
        "tags": [
          "BeatMods"
        ],
        "summary": "Legacy BeatMods API endpoint.",
        "description": "Legacy BeatMods API endpoint. This is available for mod downloaders that have not been updated to use the new API.<br><br>This endpoint does not work the same way as the old BeatMods API, but it should be close enough to work with most mod downloaders.",
        "parameters": [
          {
            "name": "gameVersion",
            "description": "The game version as a string (ex. '1.29.1', '1.40.0').",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "in": "query",
            "description": "The statuses to return. Available statuses are: 'approved' & 'all'",
            "format": "string",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all mods."
          },
          "400": {
            "description": "Missing Game Version."
          }
        },
        "deprecated": true
      }
    },
    "/beatmods/versions": {
      "get": {
        "tags": [
          "BeatMods"
        ],
        "summary": "Legacy BeatMods API Version endpoint.",
        "description": "Legacy BeatMods API endpoint. This is available for mod downloaders that have not been updated to use the new API.<br><br>This endpoint does not work the same way as the old BeatMods API, but it should be close enough to work with most mod downloaders.",
        "responses": {
          "200": {
            "description": "Returns all versions."
          }
        },
        "deprecated": true
      }
    },
    "/versions.json": {
      "get": {
        "tags": [
          "BeatMods"
        ],
        "summary": "Legacy BeatMods API Version endpoint.",
        "description": "Legacy BeatMods API endpoint. This is available for mod downloaders that have not been updated to use the new API.<br><br>This endpoint does not work the same way as the old BeatMods API, but it should be close enough to work with most mod downloaders.",
        "responses": {
          "200": {
            "description": "Returns all versions."
          }
        },
        "deprecated": true
      }
    },
    "/beatmods/aliases": {
      "get": {
        "tags": [
          "BeatMods"
        ],
        "summary": "Legacy BeatMods API Aliases endpoint.",
        "description": "Legacy BeatMods API endpoint. This is available for mod downloaders that have not been updated to use the new API.<br><br>This endpoint does not work the same way as the old BeatMods API, but it should be close enough to work with most mod downloaders.",
        "responses": {
          "200": {
            "description": "Returns all aliases."
          }
        },
        "deprecated": true
      }
    },
    "/aliases.json": {
      "get": {
        "tags": [
          "BeatMods"
        ],
        "summary": "Legacy BeatMods API Aliases endpoint.",
        "description": "Legacy BeatMods API endpoint. This is available for mod downloaders that have not been updated to use the new API.<br><br>This endpoint does not work the same way as the old BeatMods API, but it should be close enough to work with most mod downloaders.",
        "responses": {
          "200": {
            "description": "Returns all aliases."
          }
        },
        "deprecated": true
      }
    },
    "/mods": {
      "get": {
        "tags": [
          "Mods"
        ],
        "summary": "Get all mods for a specified version.",
        "description": "Get all mods.<br><br>If gameName is not provided, it will default to Beat Saber.<br>If gameVersion is not provided, it will default to whatever is set as the lastest version for the selected game.",
        "parameters": [
          {
            "name": "gameName",
            "description": "The game name.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gameVersion",
            "description": "The game version (ex. '1.29.1', '1.40.0').",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "status",
            "description": "The status of the mod. Available status are: 'verified'. Typing anything other than that will show you unverified mods too.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "description": "The platform of the mod. Available platforms are: 'oculuspc', 'universalpc', 'steampc'",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns all mods.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mods": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "mod": {
                            "$ref": "#/components/schemas/ModAPIPublicResponse"
                          },
                          "latest": {
                            "$ref": "#/components/schemas/ModVersionAPIPublicResponse"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mods": {
                      "type": "array",
                      "items": {
                        "type": "object",
                        "properties": {
                          "mod": {
                            "$ref": "#/components/schemas/ModAPIPublicResponse"
                          },
                          "latest": {
                            "$ref": "#/components/schemas/ModVersionAPIPublicResponse"
                          }
                        }
                      }
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Invalid gameVersion."
          }
        }
      }
    },
    "/mods/{modIdParam}": {
      "get": {
        "tags": [
          "Mods"
        ],
        "summary": "Get a specific mod by ID.",
        "description": "Get a specific mod by ID. This will also return every version of the mod.",
        "parameters": [
          {
            "name": "modIdParam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The mod ID."
          },
          {
            "name": "raw",
            "description": "Return the raw mod info.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the mod."
          },
          "400": {
            "description": "Invalid mod id."
          },
          "404": {
            "description": "Mod not found."
          }
        }
      },
      "patch": {
        "tags": [
          "Mods"
        ],
        "description": "Update a mod.",
        "parameters": [
          {
            "name": "modIdParam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Mod ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Mod data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "summary": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "category": {
                  "type": "string",
                  "example": "string"
                },
                "authorIds": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                },
                "gitUrl": {
                  "type": "string",
                  "example": "string"
                },
                "gameName": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/modversions/{modVersionIdParam}": {
      "get": {
        "tags": [
          "Mods"
        ],
        "summary": "Get a specific mod version by ID.",
        "description": "Get a specific mod version by ID.",
        "parameters": [
          {
            "name": "modVersionIdParam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The mod version ID."
          },
          {
            "name": "raw",
            "description": "Return the raw mod depedendcies without attempting to resolve them.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the mod version."
          },
          "400": {
            "description": "Invalid mod version id."
          },
          "404": {
            "description": "Mod version not found."
          }
        }
      }
    },
    "/hashlookup": {
      "get": {
        "tags": [
          "Mods"
        ],
        "summary": "Get a specific mod version that has a file with the specified hash.",
        "description": "Get a specific mod version that has a file with the specified hash. This is useful for finding the mod that a file belongs to.",
        "parameters": [
          {
            "name": "hash",
            "description": "The hash to look up.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "raw",
            "description": "Return the raw mod depedendcies without attempting to resolve them.",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns the mod version."
          },
          "400": {
            "description": "Missing hash."
          },
          "404": {
            "description": "Hash not found."
          }
        }
      }
    },
    "/mods/create": {
      "post": {
        "tags": [
          "Mods"
        ],
        "summary": "Create a mod.",
        "description": "Create a mod.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "summary": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "gitUrl": {
                  "type": "string",
                  "example": "string"
                },
                "category": {
                  "type": "string",
                  "example": "string"
                },
                "gameName": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          },
          {
            "name": "icon",
            "in": "formData",
            "description": "Mod icon.",
            "required": false,
            "schema": {
              "type": "file"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "413": {
            "description": "Payload Too Large"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/mods/{modIdParam}/upload": {
      "post": {
        "tags": [
          "Mods"
        ],
        "summary": "Upload a mod version.",
        "description": "Upload a mod version.",
        "parameters": [
          {
            "name": "modIdParam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Mod ID."
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "type": "object",
              "properties": {
                "supportedGameVersionIds": {
                  "type": "array",
                  "example": [
                    1
                  ],
                  "items": {
                    "type": "number"
                  }
                },
                "modVersion": {
                  "type": "string",
                  "example": "1.0.0"
                },
                "dependencies": {
                  "type": "array",
                  "example": [
                    1
                  ],
                  "items": {
                    "type": "number"
                  }
                },
                "platform": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          },
          {
            "name": "file",
            "in": "formData",
            "description": "Mod zip file.",
            "required": true,
            "schema": {
              "type": "file"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "413": {
            "description": "Payload Too Large"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/modversion/{modVersionIdParam}": {
      "patch": {
        "tags": [
          "Mods"
        ],
        "description": "Update a mod version.",
        "parameters": [
          {
            "name": "modVersionIdParam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "Mod Version ID"
          },
          {
            "name": "body",
            "in": "body",
            "description": "Mod version data",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "supportedGameVersionIds": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                },
                "modVersion": {
                  "type": "string",
                  "example": "string"
                },
                "dependencies": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                },
                "platform": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/mods/{modIdParam}/submit": {
      "post": {
        "tags": [
          "Mods"
        ],
        "description": "",
        "parameters": [
          {
            "name": "modIdParam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/modVersions/{modVersionIdParam}/submit": {
      "post": {
        "tags": [
          "Mods"
        ],
        "description": "",
        "parameters": [
          {
            "name": "modVersionIdParam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/auth": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Get logged in user information.",
        "description": "Get user information.",
        "responses": {
          "200": {
            "description": "Returns user information."
          },
          "401": {
            "description": "Unauthorized."
          }
        }
      }
    },
    "/auth/github": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/auth/github/callback": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/auth/discord": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "responses": {
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/auth/discord/callback": {
      "get": {
        "tags": [
          "Auth"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/auth/logout": {
      "get": {
        "tags": [
          "Auth"
        ],
        "summary": "Logout.",
        "description": "Logout.",
        "responses": {
          "200": {
            "description": "Logout successful."
          },
          "400": {
            "description": "Bad Request"
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/games": {
      "get": {
        "tags": [
          "Versions"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    },
    "/versions": {
      "get": {
        "tags": [
          "Versions"
        ],
        "description": "",
        "parameters": [
          {
            "name": "gameName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      },
      "post": {
        "tags": [
          "Versions"
        ],
        "description": "",
        "parameters": [
          {
            "name": "version",
            "description": "The version to add",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gameName",
            "description": "The game name to add the version to",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "409": {
            "description": "Conflict"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/versions/default": {
      "get": {
        "tags": [
          "Versions"
        ],
        "description": "",
        "parameters": [
          {
            "name": "gameName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "tags": [
          "Versions"
        ],
        "description": "",
        "parameters": [
          {
            "name": "body",
            "description": "The ID of the version to set as default",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "gameVersionId": {
                  "type": "number",
                  "example": 1
                }
              }
            },
            "in": "query"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "gameVersionId": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/beatmods/importAll": {
      "post": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/health/hashCheck": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/health/missingIcons": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/health/dependencyResolution": {
      "get": {
        "tags": [
          "Admin"
        ],
        "description": "",
        "parameters": [
          {
            "name": "versionId",
            "description": "The version ID to check.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "gameName",
            "description": "The game name to check.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "includeUnverified",
            "description": "Include unverified mods.",
            "required": false,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      }
    },
    "/admin/linkversions": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Mark all versions as compatible with another gameversion.",
        "description": "Link two versions together.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The versions to link.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "version1": {
                  "type": "number",
                  "example": 1
                },
                "version2": {
                  "type": "number",
                  "example": 2
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "version1": {
                    "example": "any"
                  },
                  "version2": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/addRole": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Add a role to a user.",
        "description": "Add a role to a user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The role to add.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "number",
                  "example": 1
                },
                "role": {
                  "type": "string",
                  "example": "string"
                },
                "gameName": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "example": "any"
                  },
                  "gameName": {
                    "example": "any"
                  },
                  "role": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/admin/users/removeRole": {
      "post": {
        "tags": [
          "Admin"
        ],
        "summary": "Remove a role from a user.",
        "description": "Remove a role from a user.",
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "description": "The role to remove.",
            "required": true,
            "schema": {
              "type": "object",
              "properties": {
                "userId": {
                  "type": "number",
                  "example": 1
                },
                "role": {
                  "type": "string",
                  "example": "string"
                },
                "gameName": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "userId": {
                    "example": "any"
                  },
                  "gameName": {
                    "example": "any"
                  },
                  "role": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/approval/new": {
      "get": {
        "tags": [
          "Approval"
        ],
        "summary": "Get new mods & modVersions pending approval.",
        "description": "Get a list of mods & modVersions pending their first approval.",
        "parameters": [
          {
            "name": "gameName",
            "description": "The name of the game to get new mods for.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of mods pending first approval",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mods": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    },
                    "modVersions": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mods": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    },
                    "modVersions": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No mods found."
          },
          "400": {
            "description": "Missing game name."
          },
          "401": {
            "description": "Unauthorized."
          }
        }
      }
    },
    "/approval/edits": {
      "get": {
        "tags": [
          "Approval"
        ],
        "summary": "Get edits pending approval.",
        "description": "Get a list of already existing mod & modVersions that are pending approval.",
        "parameters": [
          {
            "name": "gameName",
            "description": "The name of the game to get edits for.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "List of edits pending approval",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "edits": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "edits": {
                      "type": "array",
                      "example": [],
                      "items": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "204": {
            "description": "No edits found."
          },
          "400": {
            "description": "Missing game name."
          },
          "401": {
            "description": "Unauthorized."
          }
        }
      }
    },
    "/approval/mod/{modIdParam}/approve": {
      "post": {
        "tags": [
          "Approval"
        ],
        "summary": "Approve a mod.",
        "description": "Approve a mod for public visibility.",
        "parameters": [
          {
            "name": "modIdParam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the mod to approve."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The status to set the mod to.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mod status updated."
          },
          "400": {
            "description": "Missing status."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Mod not found."
          },
          "500": {
            "description": "Error approving mod."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/approval/modversion/{modVersionIdParam}/approve": {
      "post": {
        "tags": [
          "Approval"
        ],
        "summary": "Approve a modVersion.",
        "description": "Approve a modVersion for public visibility.",
        "parameters": [
          {
            "name": "modVersionIdParam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the modVersion to approve."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The status to set the modVersion to.",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ModVersion status updated."
          },
          "400": {
            "description": "Missing status."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "ModVersion not found."
          },
          "500": {
            "description": "Error approving modVersion."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "status": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/approval/edit/{editIdParam}/approve": {
      "post": {
        "tags": [
          "Approval"
        ],
        "summary": "Approve an edit.",
        "description": "Approve an edit for public visibility.",
        "parameters": [
          {
            "name": "editIdParam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the edit to approve."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The accepted value.",
            "schema": {
              "type": "object",
              "properties": {
                "accepted": {
                  "type": "string",
                  "example": "boolean"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Edit status updated."
          },
          "400": {
            "description": "Missing status."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Edit not found."
          },
          "500": {
            "description": "Error approving edit."
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "accepted": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/approval/mod/{modIdParam}": {
      "patch": {
        "tags": [
          "Approval"
        ],
        "summary": "Edit a mod in the approval queue.",
        "description": "Edit a mod in the approval queue.",
        "parameters": [
          {
            "name": "modIdParam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the mod to edit."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The mod object to update.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "summary": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "gitUrl": {
                  "type": "string",
                  "example": "string"
                },
                "category": {
                  "type": "string",
                  "example": "string"
                },
                "gameName": {
                  "type": "string",
                  "example": "string"
                },
                "authorIds": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Mod updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mod": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "mod": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "No changes provided."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Mod not found."
          },
          "500": {
            "description": "Error updating mod."
          },
          "501": {
            "description": "Not Implemented"
          }
        },
        "deprecated": true
      }
    },
    "/approval/modversion/{modVersionIdParam}": {
      "patch": {
        "tags": [
          "Approval"
        ],
        "summary": "Edit a modVersion in the approval queue.",
        "description": "Edit a modVersion in the approval queue.",
        "parameters": [
          {
            "name": "modVersionIdParam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the modVersion to edit."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The modVersion object to update.",
            "schema": {
              "type": "object",
              "properties": {
                "modVersion": {
                  "type": "string",
                  "example": "string"
                },
                "supportedGameVersionIds": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                },
                "dependencies": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                },
                "platform": {
                  "type": "string",
                  "example": "string"
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "ModVersion updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "modVersion": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "modVersion": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "No changes provided."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "ModVersion not found."
          },
          "500": {
            "description": "Error updating modVersion."
          },
          "501": {
            "description": "Not Implemented"
          }
        },
        "deprecated": true
      }
    },
    "/approval/edit/{editIdParam}": {
      "patch": {
        "tags": [
          "Approval"
        ],
        "summary": "Edit an edit in the approval queue.",
        "description": "Edit an edit in the approval queue.",
        "parameters": [
          {
            "name": "editIdParam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the edit to edit."
          },
          {
            "name": "body",
            "in": "body",
            "required": true,
            "description": "The edit object to update.",
            "schema": {
              "type": "object",
              "properties": {
                "name": {
                  "type": "string",
                  "example": "string"
                },
                "summary": {
                  "type": "string",
                  "example": "string"
                },
                "description": {
                  "type": "string",
                  "example": "string"
                },
                "gitUrl": {
                  "type": "string",
                  "example": "string"
                },
                "category": {
                  "type": "string",
                  "example": "string"
                },
                "gameName": {
                  "type": "string",
                  "example": "string"
                },
                "authorIds": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                },
                "supportedGameVersionIds": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                },
                "modVersion": {
                  "type": "string",
                  "example": "string"
                },
                "platform": {
                  "type": "string",
                  "example": "string"
                },
                "dependencies": {
                  "type": "array",
                  "example": [
                    1,
                    2,
                    3
                  ],
                  "items": {
                    "type": "number"
                  }
                }
              }
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Edit updated.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "edit": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "edit": {
                      "type": "object",
                      "properties": {}
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          },
          "400": {
            "description": "No changes provided."
          },
          "401": {
            "description": "Unauthorized."
          },
          "404": {
            "description": "Edit not found."
          },
          "500": {
            "description": "Error updating edit."
          }
        }
      }
    },
    "/approval/modVersion/{modVersionIdParam}/revoke": {
      "post": {
        "tags": [
          "Approval"
        ],
        "summary": "Revoke a modVersion",
        "description": "Revoke a modVersion\\'s verification status.\\n\\nThis will also revoke the verification status of any modVersions that depend on this modVersion.",
        "parameters": [
          {
            "name": "modVersionIdParam",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "The id of the modVersion to revoke."
          },
          {
            "name": "allowDependants",
            "description": "Allow dependants to remain verified. This is dangerous.",
            "required": true,
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "allowDependants": {
                    "example": "any"
                  }
                }
              }
            }
          }
        }
      }
    },
    "/motd": {
      "get": {
        "tags": [
          "MOTD"
        ],
        "description": "",
        "parameters": [
          {
            "name": "gameName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      },
      "post": {
        "tags": [
          "MOTD"
        ],
        "description": "",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          }
        }
      }
    },
    "/motd/{id}": {
      "delete": {
        "tags": [
          "MOTD"
        ],
        "description": "",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad Request"
          },
          "404": {
            "description": "Not Found"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get logged in user information.",
        "description": "Get user information.",
        "responses": {
          "200": {
            "description": "Returns user information."
          },
          "401": {
            "description": "Unauthorized."
          },
          "500": {
            "description": "Internal server error."
          }
        }
      }
    },
    "/user/{id}": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user information.",
        "description": "Get user information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID."
          }
        ],
        "responses": {
          "200": {
            "description": "Returns user information."
          },
          "400": {
            "description": "Invalid parameters."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/user/{id}/mods": {
      "get": {
        "tags": [
          "Users"
        ],
        "summary": "Get user information.",
        "description": "Get user information.",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string"
            },
            "description": "User ID."
          },
          {
            "name": "status",
            "description": "Status of the mod.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "platform",
            "description": "Platform of the mod.",
            "in": "query",
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Returns mods."
          },
          "400": {
            "description": "Invalid parameters."
          },
          "404": {
            "description": "User not found."
          }
        }
      }
    },
    "/bbmStatusForBbmAlsoPinkEraAndLillieAreCuteBtwWilliamGay": {
      "get": {
        "tags": [
          "Status"
        ],
        "summary": "Get API status.",
        "description": "Get API status.",
        "responses": {
          "200": {
            "description": "Returns API status.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/APIStatus"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/APIStatus"
                }
              }
            }
          },
          "500": {
            "description": "Internal server error.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error."
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Internal server error."
                    }
                  },
                  "xml": {
                    "name": "main"
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "ModAPIPublicResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The mod's internal ID.",
            "example": 1
          },
          "name": {
            "type": "string",
            "description": "The name of the mod.",
            "example": "Example Mod"
          },
          "summary": {
            "type": "string",
            "description": "The summary of the mod.",
            "example": "This is an example mod."
          },
          "description": {
            "type": "string",
            "description": "The description of the mod. Supports markdown.",
            "example": "This is an example mod."
          },
          "gameName": {
            "type": "string",
            "description": "The name of the game this mod is for. This is used to identify the game.",
            "example": "BeatSaber",
            "default": "BeatSaber"
          },
          "category": {
            "type": "string",
            "enum": [
              "core",
              "essential",
              "library",
              "cosmetic",
              "practice",
              "gameplay",
              "streamtools",
              "ui",
              "lighting",
              "tweaks",
              "multiplayer",
              "text",
              "editor",
              "other"
            ]
          },
          "authors": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/UserAPIPublicResponse"
                }
              ]
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "private",
              "removed",
              "unverified",
              "verified"
            ]
          },
          "iconFileName": {
            "type": "string",
            "default": "default.png"
          },
          "gitUrl": {
            "type": "string"
          },
          "lastApprovedById": {
            "type": "integer",
            "nullable": true,
            "default": null
          },
          "lastUpdatedById": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "description": "The date the mod was added to the API.",
            "example": "2023-10-01T00:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date the mod was last updated.",
            "example": "2023-10-01T00:00:00.000Z"
          }
        }
      },
      "ModVersionAPIPublicResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The version's internal ID.",
            "example": 1
          },
          "modId": {
            "type": "integer",
            "description": "The parent mod's internal ID.",
            "example": 1
          },
          "modVersion": {
            "type": "string",
            "description": "The version string. This is used to identify the version of the mod. This must be SemVer compliant.",
            "example": "1.0.0"
          },
          "author": {
            "$ref": "#/components/schemas/UserAPIPublicResponse"
          },
          "platform": {
            "type": "string",
            "enum": [
              "steampc",
              "oculuspc",
              "universalpc",
              "universalquest"
            ]
          },
          "zipHash": {
            "type": "string",
            "description": "The hash of the zip file. This is used to find and download the zip file. Will be a MD5 hash.",
            "example": "34e6985de8fbf7b525fc841c2cb45786"
          },
          "contentHashes": {
            "type": "object",
            "properties": {
              "path": {
                "type": "string"
              },
              "hash": {
                "type": "string"
              }
            }
          },
          "status": {
            "type": "string",
            "enum": [
              "private",
              "removed",
              "unverified",
              "verified"
            ]
          },
          "dependencies": {
            "type": "array",
            "items": {
              "type": "integer",
              "description": "The ID of the mod version this version depends on."
            }
          },
          "supportedGameVersions": {
            "type": "array",
            "items": {
              "allOf": [
                {
                  "$ref": "#/components/schemas/GameVersionAPIPublicResponse"
                }
              ]
            }
          },
          "downloadCount": {
            "type": "integer"
          },
          "createdAt": {
            "type": "string",
            "description": "The date the version was added to the API.",
            "example": "2023-10-01T00:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date the version was last updated.",
            "example": "2023-10-01T00:00:00.000Z"
          }
        }
      },
      "UserAPIPublicResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The user's internal ID.",
            "example": 1
          },
          "username": {
            "type": "string",
            "description": "The user's username from GitHub.",
            "example": "saeraphinx"
          },
          "githubId": {
            "type": "integer",
            "description": "The user's GitHub ID.",
            "example": 123456789,
            "nullable": true
          },
          "sponsorUrl": {
            "type": "string",
            "description": "The URL to support the user's works financially.",
            "example": "https://www.patreon.com/c/beatsabermods",
            "default": null,
            "nullable": true
          },
          "displayName": {
            "type": "string",
            "description": "The user's display name from GitHub. Is editable after registration, and can be different from the GitHub username/display name.",
            "example": "Saeraphinx"
          },
          "roles": {
            "type": "object",
            "properties": {
              "siteide": {
                "type": "array",
                "items": {
                  "type": "string",
                  "enum": [
                    "allpermissions",
                    "admin",
                    "poster",
                    "approver",
                    "moderator",
                    "banned"
                  ]
                },
                "default": [],
                "example": [
                  "admin"
                ],
                "description": "Site-wide roles. Takes precedence over per-game roles."
              },
              "perGame": {
                "type": "object",
                "example": {
                  "BeatSaber": [
                    "approver"
                  ]
                }
              }
            },
            "default": {
              "siteide": [],
              "perGame": {}
            },
            "example": {
              "siteide": [
                "admin"
              ],
              "perGame": {
                "BeatSaber": [
                  "approver"
                ]
              }
            }
          },
          "bio": {
            "type": "string",
            "description": "The user's bio from GitHub. Is editable after registration. Supports markdown.",
            "example": "j"
          },
          "createdAt": {
            "type": "string",
            "description": "The date the user registered to the API.",
            "example": "2023-10-01T00:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date the profile was last updated.",
            "example": "2023-10-01T00:00:00.000Z"
          }
        }
      },
      "GameVersionAPIPublicResponse": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "description": "The version's internal ID.",
            "example": 1
          },
          "gameName": {
            "type": "string",
            "description": "The name of the game this version is for. This is used to identify the game.",
            "example": "BeatSaber"
          },
          "version": {
            "type": "string",
            "description": "The version string. This is used to identify the version of the game.",
            "example": "1.0.0"
          },
          "createdAt": {
            "type": "string",
            "description": "The date the version was added to the API.",
            "example": "2023-10-01T00:00:00.000Z"
          },
          "updatedAt": {
            "type": "string",
            "description": "The date the version was last updated.",
            "example": "2023-10-01T00:00:00.000Z"
          }
        }
      },
      "APIStatus": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Status message.",
            "example": "API is running.",
            "default": "API is running."
          },
          "veryImportantMessage": {
            "type": "string",
            "description": "Very important message.",
            "example": "pink cute, era cute, lillie cute, william gay",
            "default": "pink cute, era cute, lillie cute, william gay"
          },
          "apiVersion": {
            "type": "string",
            "description": "API version (as seen in documentation).",
            "example": "0.0.1",
            "default": "Version not found."
          },
          "gitVersion": {
            "type": "string",
            "description": "Git commit hash.",
            "example": "3d94a00",
            "default": "Version not found."
          },
          "isDocker": {
            "type": "boolean",
            "description": "Whether the API is running in Docker or not.",
            "example": true,
            "default": false
          }
        }
      }
    }
  }
}